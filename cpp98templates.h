//   Copyright (C) 2011, Chris Foster [chris42f (at) gmail (d0t) com]
//   Copyright 2020 @ Evandro Coan, https://github.com/evandrocoan
//
//   C++ 98 Variadic Templates Support Header Version: 1.0.0
//   Always ensure you are using the latest version by checking:
//   https://github.com/evandrocoan/cppdebugger
//
// Boost Software License - Version 1.0
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//------------------------------------------------------------------------------
// Tools for emulating variadic templates in C++98.  The basic idea here is
// stolen from the boost preprocessor metaprogramming library and cut down to
// be just general enough for what we need.

#define CPP98VARIADICTEMPLATE_OPEN_PAREN (
#define CPP98VARIADICTEMPLATE_CLOSE_PAREN )

#define CPP98VARIADICTEMPLATE_ARGTYPES(n,begin,end,...) CPP98VARIADICTEMPLATE_ARGTYPES_CALL_ ## n (begin,end,__VA_ARGS__)
#define CPP98VARIADICTEMPLATE_VARARGS(n,...)            CPP98VARIADICTEMPLATE_VARARGS_CALL_  ## n (__VA_ARGS__)
#define CPP98VARIADICTEMPLATE_PASSARGS(n,begin,end,...) CPP98VARIADICTEMPLATE_PASSARGS_CALL_ ## n (begin,end,__VA_ARGS__)

// To keep it as transparent as possible, the macros below have been generated
// using python via the excellent cog code generation script.  This avoids
// the need for a bunch of complex (but more general) preprocessor tricks as
// used in boost.preprocessor.
//
// To rerun the code generation in place, use `cog -r cpp98templates.h`
// (see http://nedbatchelder.com/code/cog).  Alternatively you can just create
// extra versions by hand.

/*[[[cog
maxParams = 24

def makeCommaSepLists(lineTemplate, elemTemplate, startInd=1):
    for line in range(startInd,maxParams+1):
        elements = elemTemplate % { 'last': line - 1, 'line': line }
        cog.outl(lineTemplate % {'line': line, 'list': elements})

cog.outl()
cog.outl()
cog.outl('#define CPP98VARIADICTEMPLATE_ARGTYPES_1 typename T1')
makeCommaSepLists('#define CPP98VARIADICTEMPLATE_ARGTYPES_%(line)d %(list)s',
                  'CPP98VARIADICTEMPLATE_ARGTYPES_%(last)d, typename T%(line)d',
                  startInd = 2)

cog.outl()
cog.outl('#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_0(...)')
cog.outl('#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_1(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_1 end')
makeCommaSepLists('#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_%(line)d(begin,end,...) begin __VA_ARGS__ %(list)s end',
                  'CPP98VARIADICTEMPLATE_ARGTYPES_%(line)d',
                  startInd = 2)

cog.outl()
cog.outl()
cog.outl('#define CPP98VARIADICTEMPLATE_VARARGS_1 const T1& v1')
makeCommaSepLists('#define CPP98VARIADICTEMPLATE_VARARGS_%(line)d %(list)s',
                  'CPP98VARIADICTEMPLATE_VARARGS_%(last)d, const T%(line)d& v%(line)d',
                  startInd = 2)

cog.outl()
cog.outl('#define CPP98VARIADICTEMPLATE_VARARGS_CALL_0(...)')
cog.outl('#define CPP98VARIADICTEMPLATE_VARARGS_CALL_1(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_1')
makeCommaSepLists('#define CPP98VARIADICTEMPLATE_VARARGS_CALL_%(line)d(...) __VA_ARGS__ %(list)s',
                  'CPP98VARIADICTEMPLATE_VARARGS_%(line)d',
                  startInd = 2)

cog.outl()
cog.outl()
cog.outl('#define CPP98VARIADICTEMPLATE_PASSARGS_1 v1')
makeCommaSepLists('#define CPP98VARIADICTEMPLATE_PASSARGS_%(line)d %(list)s',
                  'CPP98VARIADICTEMPLATE_PASSARGS_%(last)d, v%(line)d',
                  startInd = 2)

cog.outl()
cog.outl('#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_0(...)')
cog.outl('#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_1(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_1 end')
makeCommaSepLists('#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_%(line)d(begin,end,...) begin __VA_ARGS__ %(list)s end',
                  'CPP98VARIADICTEMPLATE_PASSARGS_%(line)d',
                  startInd = 2)

lines = []
newline = " \\\n   "
for line in range(0,maxParams+1):
    lines.append(' m(%d)' % (line,))
    if line % 15 == 14: lines.append(newline)

cog.outl()
cog.outl()
cog.outl('#define CPP98VARIADICTEMPLATE_FOREACH_ARGNUM(m)' + newline + ''.join(lines))
]]]*/


#define CPP98VARIADICTEMPLATE_ARGTYPES_1 typename T1
#define CPP98VARIADICTEMPLATE_ARGTYPES_2 CPP98VARIADICTEMPLATE_ARGTYPES_1, typename T2
#define CPP98VARIADICTEMPLATE_ARGTYPES_3 CPP98VARIADICTEMPLATE_ARGTYPES_2, typename T3
#define CPP98VARIADICTEMPLATE_ARGTYPES_4 CPP98VARIADICTEMPLATE_ARGTYPES_3, typename T4
#define CPP98VARIADICTEMPLATE_ARGTYPES_5 CPP98VARIADICTEMPLATE_ARGTYPES_4, typename T5
#define CPP98VARIADICTEMPLATE_ARGTYPES_6 CPP98VARIADICTEMPLATE_ARGTYPES_5, typename T6
#define CPP98VARIADICTEMPLATE_ARGTYPES_7 CPP98VARIADICTEMPLATE_ARGTYPES_6, typename T7
#define CPP98VARIADICTEMPLATE_ARGTYPES_8 CPP98VARIADICTEMPLATE_ARGTYPES_7, typename T8
#define CPP98VARIADICTEMPLATE_ARGTYPES_9 CPP98VARIADICTEMPLATE_ARGTYPES_8, typename T9
#define CPP98VARIADICTEMPLATE_ARGTYPES_10 CPP98VARIADICTEMPLATE_ARGTYPES_9, typename T10
#define CPP98VARIADICTEMPLATE_ARGTYPES_11 CPP98VARIADICTEMPLATE_ARGTYPES_10, typename T11
#define CPP98VARIADICTEMPLATE_ARGTYPES_12 CPP98VARIADICTEMPLATE_ARGTYPES_11, typename T12
#define CPP98VARIADICTEMPLATE_ARGTYPES_13 CPP98VARIADICTEMPLATE_ARGTYPES_12, typename T13
#define CPP98VARIADICTEMPLATE_ARGTYPES_14 CPP98VARIADICTEMPLATE_ARGTYPES_13, typename T14
#define CPP98VARIADICTEMPLATE_ARGTYPES_15 CPP98VARIADICTEMPLATE_ARGTYPES_14, typename T15
#define CPP98VARIADICTEMPLATE_ARGTYPES_16 CPP98VARIADICTEMPLATE_ARGTYPES_15, typename T16
#define CPP98VARIADICTEMPLATE_ARGTYPES_17 CPP98VARIADICTEMPLATE_ARGTYPES_16, typename T17
#define CPP98VARIADICTEMPLATE_ARGTYPES_18 CPP98VARIADICTEMPLATE_ARGTYPES_17, typename T18
#define CPP98VARIADICTEMPLATE_ARGTYPES_19 CPP98VARIADICTEMPLATE_ARGTYPES_18, typename T19
#define CPP98VARIADICTEMPLATE_ARGTYPES_20 CPP98VARIADICTEMPLATE_ARGTYPES_19, typename T20
#define CPP98VARIADICTEMPLATE_ARGTYPES_21 CPP98VARIADICTEMPLATE_ARGTYPES_20, typename T21
#define CPP98VARIADICTEMPLATE_ARGTYPES_22 CPP98VARIADICTEMPLATE_ARGTYPES_21, typename T22
#define CPP98VARIADICTEMPLATE_ARGTYPES_23 CPP98VARIADICTEMPLATE_ARGTYPES_22, typename T23
#define CPP98VARIADICTEMPLATE_ARGTYPES_24 CPP98VARIADICTEMPLATE_ARGTYPES_23, typename T24

#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_0(...)
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_1(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_1 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_2(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_2 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_3(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_3 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_4(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_4 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_5(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_5 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_6(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_6 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_7(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_7 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_8(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_8 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_9(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_9 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_10(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_10 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_11(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_11 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_12(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_12 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_13(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_13 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_14(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_14 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_15(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_15 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_16(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_16 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_17(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_17 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_18(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_18 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_19(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_19 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_20(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_20 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_21(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_21 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_22(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_22 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_23(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_23 end
#define CPP98VARIADICTEMPLATE_ARGTYPES_CALL_24(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_ARGTYPES_24 end


#define CPP98VARIADICTEMPLATE_VARARGS_1 const T1& v1
#define CPP98VARIADICTEMPLATE_VARARGS_2 CPP98VARIADICTEMPLATE_VARARGS_1, const T2& v2
#define CPP98VARIADICTEMPLATE_VARARGS_3 CPP98VARIADICTEMPLATE_VARARGS_2, const T3& v3
#define CPP98VARIADICTEMPLATE_VARARGS_4 CPP98VARIADICTEMPLATE_VARARGS_3, const T4& v4
#define CPP98VARIADICTEMPLATE_VARARGS_5 CPP98VARIADICTEMPLATE_VARARGS_4, const T5& v5
#define CPP98VARIADICTEMPLATE_VARARGS_6 CPP98VARIADICTEMPLATE_VARARGS_5, const T6& v6
#define CPP98VARIADICTEMPLATE_VARARGS_7 CPP98VARIADICTEMPLATE_VARARGS_6, const T7& v7
#define CPP98VARIADICTEMPLATE_VARARGS_8 CPP98VARIADICTEMPLATE_VARARGS_7, const T8& v8
#define CPP98VARIADICTEMPLATE_VARARGS_9 CPP98VARIADICTEMPLATE_VARARGS_8, const T9& v9
#define CPP98VARIADICTEMPLATE_VARARGS_10 CPP98VARIADICTEMPLATE_VARARGS_9, const T10& v10
#define CPP98VARIADICTEMPLATE_VARARGS_11 CPP98VARIADICTEMPLATE_VARARGS_10, const T11& v11
#define CPP98VARIADICTEMPLATE_VARARGS_12 CPP98VARIADICTEMPLATE_VARARGS_11, const T12& v12
#define CPP98VARIADICTEMPLATE_VARARGS_13 CPP98VARIADICTEMPLATE_VARARGS_12, const T13& v13
#define CPP98VARIADICTEMPLATE_VARARGS_14 CPP98VARIADICTEMPLATE_VARARGS_13, const T14& v14
#define CPP98VARIADICTEMPLATE_VARARGS_15 CPP98VARIADICTEMPLATE_VARARGS_14, const T15& v15
#define CPP98VARIADICTEMPLATE_VARARGS_16 CPP98VARIADICTEMPLATE_VARARGS_15, const T16& v16
#define CPP98VARIADICTEMPLATE_VARARGS_17 CPP98VARIADICTEMPLATE_VARARGS_16, const T17& v17
#define CPP98VARIADICTEMPLATE_VARARGS_18 CPP98VARIADICTEMPLATE_VARARGS_17, const T18& v18
#define CPP98VARIADICTEMPLATE_VARARGS_19 CPP98VARIADICTEMPLATE_VARARGS_18, const T19& v19
#define CPP98VARIADICTEMPLATE_VARARGS_20 CPP98VARIADICTEMPLATE_VARARGS_19, const T20& v20
#define CPP98VARIADICTEMPLATE_VARARGS_21 CPP98VARIADICTEMPLATE_VARARGS_20, const T21& v21
#define CPP98VARIADICTEMPLATE_VARARGS_22 CPP98VARIADICTEMPLATE_VARARGS_21, const T22& v22
#define CPP98VARIADICTEMPLATE_VARARGS_23 CPP98VARIADICTEMPLATE_VARARGS_22, const T23& v23
#define CPP98VARIADICTEMPLATE_VARARGS_24 CPP98VARIADICTEMPLATE_VARARGS_23, const T24& v24

#define CPP98VARIADICTEMPLATE_VARARGS_CALL_0(...)
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_1(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_1
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_2(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_2
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_3(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_3
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_4(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_4
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_5(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_5
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_6(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_6
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_7(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_7
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_8(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_8
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_9(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_9
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_10(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_10
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_11(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_11
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_12(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_12
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_13(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_13
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_14(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_14
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_15(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_15
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_16(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_16
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_17(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_17
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_18(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_18
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_19(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_19
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_20(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_20
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_21(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_21
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_22(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_22
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_23(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_23
#define CPP98VARIADICTEMPLATE_VARARGS_CALL_24(...) __VA_ARGS__ CPP98VARIADICTEMPLATE_VARARGS_24


#define CPP98VARIADICTEMPLATE_PASSARGS_1 v1
#define CPP98VARIADICTEMPLATE_PASSARGS_2 CPP98VARIADICTEMPLATE_PASSARGS_1, v2
#define CPP98VARIADICTEMPLATE_PASSARGS_3 CPP98VARIADICTEMPLATE_PASSARGS_2, v3
#define CPP98VARIADICTEMPLATE_PASSARGS_4 CPP98VARIADICTEMPLATE_PASSARGS_3, v4
#define CPP98VARIADICTEMPLATE_PASSARGS_5 CPP98VARIADICTEMPLATE_PASSARGS_4, v5
#define CPP98VARIADICTEMPLATE_PASSARGS_6 CPP98VARIADICTEMPLATE_PASSARGS_5, v6
#define CPP98VARIADICTEMPLATE_PASSARGS_7 CPP98VARIADICTEMPLATE_PASSARGS_6, v7
#define CPP98VARIADICTEMPLATE_PASSARGS_8 CPP98VARIADICTEMPLATE_PASSARGS_7, v8
#define CPP98VARIADICTEMPLATE_PASSARGS_9 CPP98VARIADICTEMPLATE_PASSARGS_8, v9
#define CPP98VARIADICTEMPLATE_PASSARGS_10 CPP98VARIADICTEMPLATE_PASSARGS_9, v10
#define CPP98VARIADICTEMPLATE_PASSARGS_11 CPP98VARIADICTEMPLATE_PASSARGS_10, v11
#define CPP98VARIADICTEMPLATE_PASSARGS_12 CPP98VARIADICTEMPLATE_PASSARGS_11, v12
#define CPP98VARIADICTEMPLATE_PASSARGS_13 CPP98VARIADICTEMPLATE_PASSARGS_12, v13
#define CPP98VARIADICTEMPLATE_PASSARGS_14 CPP98VARIADICTEMPLATE_PASSARGS_13, v14
#define CPP98VARIADICTEMPLATE_PASSARGS_15 CPP98VARIADICTEMPLATE_PASSARGS_14, v15
#define CPP98VARIADICTEMPLATE_PASSARGS_16 CPP98VARIADICTEMPLATE_PASSARGS_15, v16
#define CPP98VARIADICTEMPLATE_PASSARGS_17 CPP98VARIADICTEMPLATE_PASSARGS_16, v17
#define CPP98VARIADICTEMPLATE_PASSARGS_18 CPP98VARIADICTEMPLATE_PASSARGS_17, v18
#define CPP98VARIADICTEMPLATE_PASSARGS_19 CPP98VARIADICTEMPLATE_PASSARGS_18, v19
#define CPP98VARIADICTEMPLATE_PASSARGS_20 CPP98VARIADICTEMPLATE_PASSARGS_19, v20
#define CPP98VARIADICTEMPLATE_PASSARGS_21 CPP98VARIADICTEMPLATE_PASSARGS_20, v21
#define CPP98VARIADICTEMPLATE_PASSARGS_22 CPP98VARIADICTEMPLATE_PASSARGS_21, v22
#define CPP98VARIADICTEMPLATE_PASSARGS_23 CPP98VARIADICTEMPLATE_PASSARGS_22, v23
#define CPP98VARIADICTEMPLATE_PASSARGS_24 CPP98VARIADICTEMPLATE_PASSARGS_23, v24

#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_0(...)
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_1(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_1 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_2(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_2 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_3(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_3 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_4(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_4 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_5(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_5 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_6(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_6 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_7(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_7 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_8(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_8 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_9(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_9 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_10(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_10 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_11(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_11 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_12(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_12 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_13(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_13 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_14(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_14 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_15(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_15 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_16(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_16 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_17(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_17 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_18(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_18 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_19(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_19 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_20(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_20 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_21(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_21 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_22(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_22 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_23(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_23 end
#define CPP98VARIADICTEMPLATE_PASSARGS_CALL_24(begin,end,...) begin __VA_ARGS__ CPP98VARIADICTEMPLATE_PASSARGS_24 end


#define CPP98VARIADICTEMPLATE_FOREACH_ARGNUM(m) \
    m(0) m(1) m(2) m(3) m(4) m(5) m(6) m(7) m(8) m(9) m(10) m(11) m(12) m(13) m(14) \
    m(15) m(16) m(17) m(18) m(19) m(20) m(21) m(22) m(23) m(24)
//[[[end]]]
